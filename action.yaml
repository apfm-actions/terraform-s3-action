name: S3 Deploy
description: Deploy an AWS S3 using Terraform
inputs:
  destroy:
    description: 'Runs Terraform destroy to remove resources created by this action'
    required: false
    default: false
  deploy:
    description: 'Runs Terraform apply to create/update resources created by this action'
    required: false
    default: true
  plan:
    description: 'Runs Terraform plan to check the changes necessary to achieve the desired state'
    required: false
    default: true

  bucket_name:
    description: 'The name of the bucket'
    required: true
  acl:
    description: 'The canned ACL to apply. https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl. If enable_website is true, public-read ACL will be used.'
    required: false
    default: "private"
  bucket_policy:
    description: 'A valid bucket policy JSON document. If enable_website is true, a public read bucket policy will be used.'
    required: false
  force_destroy:
    description: 'Allows Terraform to destroy a non-empty S3 bucket'
    required: false
    default: false

  enable_website:
    description: 'If true, configures s3 bucket as a website'
    required: false
    default: false
  website_index_document:
    description: 'Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders'
    required: false
    default: "index.html"
  website_error_document:
    description: 'An absolute path to the document to return in case of a 4XX error'
    required: false
  website_redirect:
    description: 'A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request'
    required: false

outputs:
  bucket_arn:
    description: 'The ARN of the bucket'
  website_endpoint:
    description: 'The website endpoint, if the bucket is configured with a website. If not, this will be an empty string'
  access_policy_arn:
    description: 'The ARN of the IAM policy that grants read-write access to the bucket'

runs:
  using: docker
  image: Dockerfile
